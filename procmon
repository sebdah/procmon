#!/usr/bin/env python

"""
procmon is a little utility for monitoring whether a process is running or not. If it's not, it'll send a notification.
"""
import getopt
import os.path
import sys

from config import config
from logger import log, set_log_level
from mail import send_email, build_email_message
import process


def main(argv):
    try:
        opts, args = getopt.getopt(argv, "hie:l:", ["help", "expected-matches", "insensitive", "log-level"])
    except getopt.GetoptError as e:
        log.error(f'Failed to parse command line arguments: %s' % e)
        sys.exit(2)

    if len(args) == 0:
        print('Missing filter string!')
        print_help()
        sys.exit(2)

    filter_string = ' '.join(args)
    case_insensitive = False
    expected_matches = 1

    for opt, arg in opts:
        if opt in ('-h', '--help'):
            print_help()
            sys.exit(0)

        elif opt in ('-e', '--expected-matches'):
            expected_matches = int(arg)

        elif opt in ('-i', '--insensitive'):
            case_insensitive = True

        elif opt in ('-l', '--log-level'):
            set_log_level(arg)

    match_count = 0
    for proc in process.list_processes():
        if process.match(proc, filter_string, case_insensitive):
            match_count += 1

    if match_count < expected_matches:
        log.error(f'Found %d of expected %d processes' % (match_count, expected_matches))
        if config.getboolean('General', 'SendEmailNotification'):
            send_email(build_email_message(match_count, expected_matches))
        sys.exit(1)

    log.info(f'Found %d of expected %d processes' % (match_count, expected_matches))
    sys.exit(0)


def print_help():
    """ Print command line argument help text """
    print(f"""{os.path.basename(sys.argv[0])} [OPTIONS] <filter string>

Options:
    -h, --help                  Print this help text
    -i, --insensitive           Case insensitive process matching
    -l, --log-level string      Log level; debug, info, warning, error (default: info)
    -m, --match-count int       Number of matches required for a successful result (default: 1)   
""")


if __name__ == '__main__':
    main(sys.argv[1:])
